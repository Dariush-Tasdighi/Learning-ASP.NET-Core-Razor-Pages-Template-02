@page
@model Server.Pages.Admin.UserManager.UpdateModel
@inject Infrastructure.Settings.ApplicationSettings applicationSettings

@{
	@if (Model.ViewModel == null)
	{
		return;
	}

	var pageTitle =
		Resources.PageTitles.UpdateUser;

	ViewData["PageTitle"] = pageTitle;

	if (System.Threading.Thread.CurrentThread.CurrentUICulture.TextInfo.IsRightToLeft)
	{
		Layout =
			"Layouts/Rtl/_Layout";
	}
	else
	{
		Layout =
			"Layouts/Ltr/_Layout";
	}
}

<form method="post">

	<div class="container my-0 my-sm-1 my-md-3 my-lg-5">
		<div class="row">
			<div class="col-12 p-3   col-md-8 offset-md-2 p-md-4   col-lg-6 offset-lg-3 p-lg-5   bg-light border border-2 rounded-3 shadow-lg">
				<fieldset>
					<legend class="mb-3">
						@(pageTitle)
					</legend>

					<hr />

					<partial name="PartialViews/_DisplayPageMessages" />

					<div class="mb-3">
						<label asp-for="ViewModel.Username" class="form-label"></label>

						<div class="input-group" readonly disabled>
							@if (string.IsNullOrWhiteSpace(value: applicationSettings.IconSettings.UserIcons.Username) == false)
							{
								<div class="input-group-text">
									<i class="@(applicationSettings.IconSettings.UserIcons.Username)"></i>
								</div>
							}

							<input asp-for="ViewModel.Username" readonly disabled class="form-control" dir="ltr" />
						</div>
					</div>

					<div class="mb-3">
						<label asp-for="ViewModel.RoleId" class="form-label"></label>

						<div class="input-group">
							@if (string.IsNullOrWhiteSpace(value: applicationSettings.IconSettings.UserIcons.Role) == false)
							{
								<div class="input-group-text">
									<i class="@(applicationSettings.IconSettings.UserIcons.Role)"></i>
								</div>
							}

							<select class="form-select" asp-for="ViewModel.RoleId">
								@foreach (var item in Model.RolesViewModel)
								{
									@if (item.Id == Model.ViewModel.RoleId)
									{
										<option value="@(item.Id)" selected>@(item.Name)</option>
									}
									else
									{
										<option value="@(item.Id)">@(item.Name)</option>
									}
								}
							</select>
						</div>

						<span asp-validation-for="ViewModel.RoleId" class="text-danger"></span>
					</div>

					<div class="mb-3">
						<label asp-for="ViewModel.Ordering" class="form-label"></label>

						<input type="number" asp-for="ViewModel.Ordering"
							   min="@(Domain.SeedWork.Constant.Minimum.Ordering)"
							   value="@(Model.ViewModel.Ordering)" class="form-control" dir="ltr" />

						<span asp-validation-for="ViewModel.Ordering" class="text-danger"></span>
					</div>

					<div class="mb-3">
						<div class="form-check">
							<input asp-for="ViewModel.IsActive" class="form-check-input" />
							<label asp-for="ViewModel.IsActive" class="form-check-label"></label>
						</div>
					</div>

					@if (Model.ViewModel.IsVerified)
					{
						<div class="mb-3">
							<div class="form-check">
								<input asp-for="ViewModel.IsVerified" class="form-check-input" readonly disabled />
								<label asp-for="ViewModel.IsVerified" class="form-check-label"></label>
							</div>
						</div>
					}
					else
					{
						<div class="mb-3">
							<div class="form-check">
								<input asp-for="ViewModel.IsVerified" class="form-check-input" />
								<label asp-for="ViewModel.IsVerified" class="form-check-label"></label>
							</div>
						</div>
					}

					<div class="mb-3">
						<button type="submit" class="btn btn-primary">@(Resources.ButtonCaptions.Save)</button>
						<button type="reset" class="btn btn-secondary">@(Resources.ButtonCaptions.Reset)</button>
					</div>

				</fieldset>

				<hr class="mt-4" />

				<div class="text-center">
					<a href="/">@(Resources.ButtonCaptions.Home)</a>
					|
					<a asp-page="./Index">@(Resources.ButtonCaptions.BackToList)</a>
				</div>
			</div>
		</div>
	</div>

</form>
